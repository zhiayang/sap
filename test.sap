# report.sap

import "std";

let font_family = builtin::find_font_family(["XCharter", "Times New Roman", "serif"]);

using std;
using builtin;

\start_document({
	font_size: 12pt,
	font_family: *font_family,
	paper_size: std::paper_size::A4,
	line_spacing: 1.3,
	sentence_space_stretch: 1.3,
	paragraph_spacing: 1.5em,
	margins: { left: 2cm, right: 2cm, top: 2cm, bottom: 2cm },
});

\script::{

	# let k = hexcolour("331FAE");
	# builtin::println(f"{k}");

	fn foozle[T](a: int, b: int)
	{
		builtin::println(f"a={a}, b={b}");
	}

	# foozle[$int](10, 20);



	fn pintos() -> Inline
	{
		return emph("Pintos").apply_style({
			colour: rgb(1, 0, 0)
		});
	}

	fn cpp() -> Inline
	{
		let c = \{C}.set_width(0.56em);
		var p1 = bold1(\{+}).apply_style({ font_size: 10.5pt, });
		var p2 = bold1(\{+}).apply_style({ font_size: 10.5pt, });

		p1.set_width(0.6em);
		p1.raise(0.05em);
		p2.raise(0.05em);

		return make_span(glue: true, *c, *p1, *p2);
	}
}

/#
pains/things to fix:

[ ] numbered_lists can't be more than 9 things long, otherwise the numbers don't line up

[ ] dereferencing optionals might need to clone them (which is weird)

[ ] prettier std::qty

[ ] no way to get value out of enum instance

[ ] sap crash:
	fn foo(f: builtin::Style) { builtin::apply_style(f, builtin::make_text("A")); }
	foo({line_spacing:1em});
#/

\disable_page_numbering();

\section("asdf");

Hello, world! Please save me. ff
