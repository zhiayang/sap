# report.sap

import "std";

let serif = builtin::find_font_family(["XCharter", "Times New Roman", "serif"]);
let sans = builtin::find_font_family(["Myriad Pro", "Helvetica", "sans-serif"]);

sans!.regular.adjust_glyph_spacing({ match: ["1.4"], adjust: [0.0, -0.04, 0.0] });
sans!.regular.adjust_glyph_spacing({ match: ["1.2", "1.3", "1.5", "1.6", "1.7", "1.8", "1.9"], adjust: [0.0, -0.07, 0.0] });
sans!.regular.adjust_glyph_spacing({ match: ["2.1", "3.1", "4.1", "5.1", "6.1", "8.1", "9.1", "0.1"], adjust: [0.0, +0.05, 0.0] });

\start_document({
	serif_font_family: *serif,
	sans_font_family: *sans,
	paper_size: std::paper_size::A4,
	margins: { left: 2cm, right: 2cm, top: 2cm, bottom: 2cm },
	default_style: {
		font_size: 12pt,
		line_spacing: 2,
		sentence_space_stretch: 1.3,
		paragraph_spacing: 1.5em,
	}
});

\script::{

	using std;
	using builtin;

	# let k = hexcolour("331FAE");
	# builtin::println(f"{k}");

	# fn foozle[T](a: int, b: int)
	# {
	# 	builtin::println(f"a={a}, b={b}");
	# }

	# foozle[$int](10, 20);



	fn pintos() -> Inline
	{
		return emph("Pintos").apply_style({
			colour: rgb(1, 0, 0)
		});
	}

	fn cpp() -> ?Inline
	{
		let c = \{C}.set_width(0.56em);
		var p1 = bold1(\{+}).apply_style({ font_size: 0.875em, });
		var p2 = bold1(\{+}).apply_style({ font_size: 0.875em, });

		p1.set_width(0.6em);
		p1.raise(0.05em);
		p2.raise(0.05em);

		return make_span(glue: true, *c, *p1, *p2);
	}

	fn kekw() -> Inline
	{
		return cpp()!.apply_style({ font_size: 20pt });
	}
}

\disable_page_numbering();

\std::bulleted_list(
	"comparatively fewer online resources",
	"high programmer friction (due to borrow checker and lifetimes)",
	"inability to implement common data structures (eg. linked lists) without using unsafe code"
)

/# NUS currently has a gap in its operating systems courses, between the help help with introductory
and the advanced, graduate-level CS5250.
 #/

# \kekw()

# NUS currently has a gap in its operating systems courses, between the introductory CS2106
# and the advanced, graduate-level CS5250. In this project, we significantly overhaul an
# educational OS, Stanford's Pintos, to make it more suitable for use in NUS. We
# rewrite the OS in modern \cpp()20 and greatly improve upon it in all aspects, including
# functionality, design, and readability. We also propose and develop several lab projects
# and extension avenues for a future CS3xxx module that will sit between CS2106 and CS5250.


# ff \cpp()
